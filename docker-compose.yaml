# Development docker-compose. Assuming the API folders are relative to this
# repository, point /etc/hosts to soil 127.0.0.1 and connect to http://soil:88

services:
  traefik:
    image: traefik:v2.9.6
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
    ports:
      - "88:80"
      - "8088:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  soil-api:
    build:
      context: ../soil-api
      dockerfile: Dockerfile.dev  # Uses the dockerfile containing cargo-watch
    environment:
      - DB_HOST=sensormap-db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=psql
      - DB_NAME=postgres
      - DB_PREFIX=postgresql
      - KEYCLOAK_UI_ID=${KEYCLOAK_CLIENT_ID}
      - KEYCLOAK_REALM=${KEYCLOAK_REALM}
      - KEYCLOAK_URL=${KEYCLOAK_URL}
      - DEPLOYMENT=local
      - APP_NAME=soil-api
    ports:
      - 3005:3000
    depends_on:
        - sensormap-db
    volumes:
      - ../soil-api/src:/app/src
      - soil-api-data:/app/target  # Store builds in docker volume
      - ../soil-api/Cargo.toml:/app/Cargo.toml
      - ../soil-api/Cargo.lock:/app/Cargo.lock
      - ~/projects/personal/crudcrate:/crudcrate
      - ~/projects/personal/crudcrate:/crudcrate-derive
    labels:
      - "traefik.http.routers.soil-api.rule=(Host(`soil`) || Host(`alpinesoc`)) && PathPrefix(`/api`)"
      - "traefik.http.services.soil-api.loadbalancer.server.port=3000"

  sensormap-ui:
    build:
      context: .
      dockerfile: Dockerfile.dev
    labels:
      - "traefik.http.routers.sensormap-ui.rule=Host(`soil`)"
      - "traefik.http.services.sensormap-ui.loadbalancer.server.port=5173"
    volumes:
      - ../sensormap-ui:/app

  alpinesoc-ui:
    build:
      context: .
      dockerfile: Dockerfile.dev
    labels:
      - "traefik.http.routers.alpinesoc-ui.rule=Host(`alpinesoc`)"
      - "traefik.http.services.alpinesoc-ui.loadbalancer.server.port=5173"
    volumes:
      - ../alpinesoc-ui:/app

  sensormap-db:
    image: postgis/postgis:16-master
    # command: >
    #   postgres
    #   -c log_destination=stderr
    #   -c logging_collector=off
    #   -c log_statement=all
    #   -c log_min_duration_statement=0
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=psql
      - POSTGRES_DB=postgres
    ports:
      - 5433:5432
    volumes:
      - sensormap-db-data:/var/lib/postgresql/data

  api-cache:
    image: redis:7.4.0
    ports:
      - 6379:6379

volumes:
  sensormap-db-data:
  soil-api-data:
